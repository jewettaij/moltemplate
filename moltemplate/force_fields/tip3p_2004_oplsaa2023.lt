#########################################################
# WARNING: THIS FILE HAS NOT BEEN TESTED!
# (If you use this file in a simulation, please email me to let me know
#  if it worked.  -Andrew 2014-5,   (jewett dot aij at gmail dot com))
#########################################################
# There are two different versions of TIP3P:
#
# tip3p_1983.lt   # The implementation of TIP3P used by CHARMM (I think).
# tip3p_2004.lt   # The newer Price & Brooks, J. Chem Phys 2004 model 
#                 # which uses long-range coulombics
#########################################################

# file "tip3p_2004.lt" 
#
#    h1     h2
#      \   /
#        o
#
# This is the version of "tip3p_2004.lt" suitable for use in a simulation
# using the OPLSAA force field (as implemented in the "oplsaa2023.lt" file),
# as described in this paper (I think):
# Daniel J. Price and Charles L. Brooks III
# J. Chem. Phys., 121(20): 10096 (2004)
#
# Note: This file was intended for use in a simulation that uses the OPLSAA
# force field.  This is different from the other water models included with
# moltemplate (eg. "tip3p_1983.lt", "spce.lt").  Those files explicitly include
# the the force-field parameters and bond geometry in the file itself.  This
# makes it easier to use those files in simulations that use other force fields.
# However that kind of information was omitted from this file.  Instead the
# force field parameters and bond geometry are defined in the "oplsaa2023.lt" file.



import "oplsaa2023.lt"   # <-- defines @atom:9999 and @atom:9998


TIP3P inherits OPLSAA {

  # Atom types from "oplsaa2023.lt"
  # @atom:9999 <--> "TIP3P Water O"
  # @atom:9998 <--> "TIP3P Water H"

  write("Data Atoms") {
    $atom:o  $mol:w @atom:9999  -0.834   0.0000000   0.00000 0.000000
    $atom:h1 $mol:w @atom:9998   0.417   0.756950327 0.00000 0.5858822766
    $atom:h2 $mol:w @atom:9998   0.417  -0.756950327 0.00000 0.5858822766
  }
  # Note the charges (-0.834, 0.417) are ignored and will be overriden.
  # (Instead, the charges will be read from the "oplsaa2023.lt" file.)

  write("Data Bond List") {
    $bond:oh1 $atom:o $atom:h1
    $bond:oh2 $atom:o $atom:h2
  }

  write_once("In Settings") {
    # Optional: Constrain the angles and distances.
    #           (Most implementations use this, but it is optional.)
    # First, define a group for the atoms in tip3p water molecules:
    group tip3p  type  @atom:9999 @atom:9998

    # Then use "fix shake" (See https://lammps.sandia.gov/doc/fix_shake.html)
    fix fShakeTIP3P tip3p shake 0.0001 10 100 b @bond:tipO_tipH a @angle:tipH_tipO_tipH

    # It's a good idea to put this command in your LAMMPS input scripts:
    #  unfix fShakeTIP3P   # <-- this disables fix shake
    # ...before minimization and pressure equilibration.  (compatibility issues)
  }


  write_once("In Init") {
    # -- Default styles (for solo "TIP3P_2004" water) --
    units        real
    atom_style   full

    pair_style   lj/charmm/coul/long 10.0 10.5 10.5

    # Note: in the LAMMPS "peptide" example, they use these parameters:
    # pair_style   lj/charmm/coul/long 8.0 10.0 10.0

    bond_style   harmonic
    angle_style  harmonic
    kspace_style pppm 0.0001
    #pair_modify  mix arithmetic  # LEAVE THIS UNSPECIFIED!
  }

} # "TIP3P" water molecule type

