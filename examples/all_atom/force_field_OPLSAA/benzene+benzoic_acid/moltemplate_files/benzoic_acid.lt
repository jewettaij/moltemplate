import "oplsaa2023.lt"


# The "oplsaa2023.lt" file defines these atom types:
# Atom type @atom:145 corresponds to "C - CA | Benzene C"
# Atom type @atom:146 corresponds to "H - HA | Benzene H"
# Atom type @atom:165 corresponds to "C - CA | Cipso in styrene"
# Atom type @atom:267 corresponds to "C - C~ | Co in CCOOH carboxylic acid"  (generic)
# Atom type @atom:470 corresponds to "C - C~ | Co in benzoic acid"  (use this instead)
# Atom type @atom:268 corresponds to "O - OH | Oh in CCOOH R in RCOOH is"
# Atom type @atom:269 corresponds to "O - O~ | Oc in CCOOH neutral; use 135-140"
# Atom type @atom:270 corresponds to "H - HO | H in CCOOH"
# The "oplsaa2023.lt" file is located at:
# https://github.com/jewettaij/moltemplate/tree/master/moltemplate/force_fields/
# If you want to customize oplsaa2023.lt, download it and copy it to this folder


BenzoicAcid inherits OPLSAA {

  # atom-id mol-id atom-type charge  X     Y      Z

  write("Data Atoms") {
    $atom:co  $mol @atom:470  0.0  1.647 -0.077  0.001
    $atom:o1  $mol @atom:269  0.0  2.221 -1.147  0.001
    $atom:o2  $mol @atom:268  0.0  2.357  1.068 -0.004
    $atom:ho2 $mol @atom:270  0.0  3.321  0.987 -0.007
    $atom:c1  $mol @atom:165  0.0  0.171 -0.030  0.000
    $atom:c2  $mol @atom:145  0.0 -0.569 -1.214 -0.000
    $atom:c3  $mol @atom:145  0.0 -1.947 -1.163 -0.001
    $atom:c4  $mol @atom:145  0.0 -2.597  0.058 -0.002
    $atom:c5  $mol @atom:145  0.0 -1.871  1.236 -0.002
    $atom:c6  $mol @atom:145  0.0 -0.492  1.199  0.006
    $atom:h2  $mol @atom:146  0.0 -0.062 -2.168 -0.000
    $atom:h3  $mol @atom:146  0.0 -2.520 -2.078 -0.001
    $atom:h4  $mol @atom:146  0.0 -3.677  0.093 -0.003
    $atom:h5  $mol @atom:146  0.0 -2.385  2.186 -0.002
    $atom:h6  $mol @atom:146  0.0  0.074  2.119  0.011
  }

  # Note: You don't have to specify the charge in this example because we are
  #       using the OPLSAA force-field which assigns charge according to
  #       atom-type.  Just leave these numbers as 0.00 for now.
  # Note: LAMMPS expects an integer in the 2nd column (the Molecule-ID number).
  #       If we put "$mol" there, moltemplate will generate this integer for you

  # --- Bond List ---
  # BondID     AtomID1  AtomID2

  write("Data Bond List") {
    $bond:c1co  $atom:c1 $atom:co
    $bond:coo1  $atom:co $atom:o1
    $bond:coo2  $atom:co $atom:o2
    $bond:o2ho2 $atom:o2 $atom:ho2
    $bond:c1c2  $atom:c1 $atom:c2
    $bond:c2c3  $atom:c2 $atom:c3
    $bond:c3c4  $atom:c3 $atom:c4
    $bond:c4c5  $atom:c4 $atom:c5
    $bond:c5c6  $atom:c5 $atom:c6
    $bond:c6c1  $atom:c6 $atom:c1
    $bond:c2h2  $atom:c2 $atom:h2
    $bond:c3h3  $atom:c3 $atom:h3
    $bond:c4h4  $atom:c4 $atom:h4
    $bond:c5h5  $atom:c5 $atom:h5
    $bond:c6h6  $atom:c6 $atom:h6
  }

  # In the "Data Bond List" section we don't have to specify the bond type.
  # The bond-type will be determined by the atom type (according to "oplsaa2023.lt")

} # BenzoicAcid

