import "methane.lt"     # <- defines the "Methane" molecule type (uses OPLSAA)
import "spce_oplsaa2023.lt" # <- defines the "SPCE" (water) molecule type.

# Note: The "spc_oplsaa2023.lt" file is located at:
# https://github.com/jewettaij/moltemplate/tree/master/moltemplate/force_fields/
# (If you want to customize it, you can download it and copy it to this folder.)


# Periodic boundary conditions:
write_once("Data Boundary") {
   0.0  41.50  xlo xhi
   0.0  41.50  ylo yhi
   0.0  41.50  zlo zhi
}

# The next command generates a (rather dense) cubic lattice with
# spacing 3.45 Angstroms. (The pressure must be equilibrated later.)

waters = new SPCE [12].move(0.00, 0.00, 3.45) 
                  [12].move(0.00, 3.45, 0.00) 
                  [12].move(3.45, 0.00, 0.00)

# Now add methane molecules:

methanes = new Methane [4].move(0, 0, 10.35)
                       [4].move(0, 10.35, 0)
                       [4].move(10.35, 0, 0)

# Move the methane molecules slightly to reduce overlap with the water
methanes[*][*][*].move(1.725, 1.725, 1.725)


# Note1: You can use the "new random" command to create mixtures of different
#        molecule types containing an arbitrary number of molecules arranged on
#        a periodic lattice.  (This works if all molecules have similar size.)
#       See manual (ch8.9.1): https://moltemplate.org/doc/moltemplate_manual.pdf
# Note2: More generally you can use PACKMOL to create mixtures of molecules.
#       It allows us to omit the coordinates and .move() commands.  And you can
#       specify the number of molecules you want more precisely.  See example:
# https://github.com/jewettaij/moltemplate/tree/master/examples/all_atom/force_field_OPLSAA/ethylene+benzene_PACKMOL/
