# Define a "ForceField" object.
# A force field in moltemplate is any object containing mostly pair_coeff,
# bond_coeff, angle_coeff, dihedral_coeff, "Bonds By Type", "Angles By Type",
# "Dihedrals By Type", "Impropers By Type", "Data Masses" (and "In Charges")
# information. Later, when we define molecules (such as "H" and "P"), we can 
# borrow these atom types, bond-rules and force field parameters.  This way,
# bonds and angular interactions are generated automatically according to
# atom (and bond) type.
# (You can also assign charge by atom type.  However in this example I assigned
#  charge to each atom manually (not by type).  The OPLSAA examples in the 
#  "all_atoms" directory demonstrate how to assign charge by atom type.)



HPForceField {

  # LAMMPS supports a large number of "styles" (ie. equations for calculating 
  # forces between particles).  At some point, we must eventually select the
  # formulas we want to use.  This can be done anywhere, but we might as
  # well specify that now.  Later on we will specify the parameters
  # which go into these equations.

  write_once("In Init") {
    units           real
    atom_style      full
    bond_style      harmonic
    angle_style     harmonic
    dihedral_style  charmm
    pair_style      lj/cut 11.0

    # If charges are needed, (assuming biopolymers), try one of:
    #dielectric      80.0
    #pair_style      lj/cut/coul/debye 0.1 11.0
    # or (for short distances, below a couple nm)
    #pair_style      lj/charmm/coul/charmm/implicit 9.0 11.0

    pair_modify     mix arithmetic
    special_bonds   lj 0.0 0.0 0.0
  }


  # There are 3 atom types:

  write_once("Data Masses") {
    @atom:CA   13.0
    @atom:HR   50.0
    @atom:PR   50.0
  }

  # 2-body (non-bonded) interactions:
  #
  #   Uij(r) = 4*eps_ij * ( (sig_ij/r)^12 - (sig_ij/r)^6 )
  #   (for details see http://lammps.sandia.gov/doc/pair_lj.html)
  #
  # Hydrophobic side-chain (R) atoms are attractive (large epsilon parameter).
  # Polar side-chains and backbone atoms are not attractive (small epsilon).
  #
  #                 i        j          eps sig
  #
  write_once("In Settings") {
    pair_coeff  @atom:CA  @atom:CA      0.10 2.0
    pair_coeff  @atom:HR  @atom:HR      2.50 3.6
    pair_coeff  @atom:PR  @atom:PR      0.10 3.6
  }

  # (By default, interactions between different AtomTypes use "arithmetic"rules:
  #     eps_ij=sqrt(eps_ii*eps_ij)      and      sig_ij=0.5*(sig_ii+sig_jj)
  #  Look for the line containing "pair_modify mix arithmetic" below...)

  # Optional: Assign bond types @bond:Backbone or @bond:Sidechain
  #           according to atom type.  (This can be overridden.)

  write_once("Data Bonds By Type") {
    @bond:Backbone   @atom:CA @atom:CA
    @bond:Sidechain  @atom:CA @atom:HR
    @bond:Sidechain  @atom:CA @atom:PR
  }

  # 2-body (bonded) interactions:
  #
  #   Ubond(r) = (k/2)*(r-0)^2
  #   (for details see http://lammps.sandia.gov/doc/bond_harmonic.html)
  #
  #   The corresponding command is:
  #
  #   bond_coeff     bondType         k     r0
  #

  write_once("In Settings") {
    bond_coeff     @bond:Sidechain   30.0   3.4
    bond_coeff     @bond:Backbone    30.0   3.7
  }


  #  Rules for determining 3 and 4-body bonded interactions by type

  # angle-type      atomType1 atomType2 atomType3

  write_once("Data Angles By Type") {
    @angle:Backbone  @atom:CA @atom:CA  @atom:CA
    @angle:Sidechain @atom:CA @atom:CA  @atom:*R  # Note: "*R" <--> "HR" or "PR"
  }

  # dihedral-type AtomType1 AtomType2 AtomType3 AtomType4

  write_once("Data Dihedrals By Type") {
    @dihedral:CCCC @atom:CA  @atom:CA @atom:CA @atom:CA
    @dihedral:RCCR @atom:*R  @atom:CA @atom:CA @atom:*R  #"*R" <--> "HR" or "PR"
  }

  # 3-body interactions in this example are listed by atomType and bondType
  # The atomIDs involved are determined automatically.  The forumula used is:
  #
  # Uangle(theta) = (k/2)*(theta-theta0)^2   
  #     (k in kcal/mol/rad^2, theta0 in degrees)
  #   (for details see http://lammps.sandia.gov/doc/angle_harmonic.html)
  #
  # The corresponding command is:
  #
  #   angle_coeff  angleType         k   theta0

  write_once("In Settings") {
    angle_coeff @angle:Backbone    30.00  114
    angle_coeff @angle:Sidechain   30.00  123
  }


  # 4-body interactions in this example are listed by atomType and bondType
  # The atomIDs involved are determined automatically.  The forumula used is:
  #
  # Udihedral(phi) = K * (1 + cos(n*phi - d))
  #
  #     The d parameter is in degrees, K is in kcal/mol/rad^2.
  #     (for details, see http://lammps.sandia.gov/doc/dihedral_charmm.html)
  #
  # The corresponding command is 
  # dihedral_coeff dihedralType        K  n   d  w  (ignore "w")

  write_once("In Settings") {
    dihedral_coeff  @dihedral:CCCC    -0.5 1 -180 0.0
    dihedral_coeff  @dihedral:RCCR    -1.5 1 -180 0.0
  } # write_once("In Settings") 


}  # HPForceField

