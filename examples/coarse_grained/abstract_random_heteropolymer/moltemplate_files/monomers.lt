import "forcefield.lt"  #<-- "forcefield.lt" contains atom type definitions,
                        #    force-field parameters, and rules for generating
                        #    3-body and 4-body angle, dihedral, and improper
                        #    interactions for molecules (polymers) made using
                        #    "2bead" and "3bead" objects as building blocks.



  # ----------------------------------------------------------------------
  # --   General comment:                                               --
  # -- The write() and write_once() commands create and append text to  --
  # -- files (replacing variables beginning with @ or $ with counters.) --
  # -- File names beginning with "In " or "Data " are special.          --
  # -- They will be pasted into the LAMMPS input script and             --
  # -- data files which are generated by moltemplate.  The syntax       --
  # -- of these files is exactly the same as the syntax from the        --
  # -- corresponding sections of a LAMMPS input script or data file.    --
  # ----------------------------------------------------------------------






3bead inherits ForceField {

    # atom-id  mol-id   atom-type    charge    x      y       z

  write("Data Atoms") {
    $atom:CA  $mol:...  @atom:CA3    0.0   0.000  1.000   0.000
    $atom:R1  $mol:...  @atom:R3     0.0   0.000  2.700   2.950
    $atom:R2  $mol:...  @atom:R3     0.0   0.000  2.700  -2.950
  }

  # bond-id    atom-id1  atom-id2
  write("Data Bond List") {
    $bond:CR1  $atom:CA  $atom:R1
    $bond:CR2  $atom:CA  $atom:R2
  }

} # 3bead




2bead inherits ForceField {

  # atom-id  mol-id   atom-type    charge  x      y       z

  write("Data Atoms") {
    $atom:CA  $mol:...  @atom:CA2   0.0   0.000  1.000  0.0000
    $atom:R   $mol:...  @atom:R2    0.0   0.000  4.400  0.0000
  }

  # bond-id    atom-id1  atom-id2
  write("Data Bond List") {
    $bond:CR   $atom:CA  $atom:R
  }

} # 2bead


