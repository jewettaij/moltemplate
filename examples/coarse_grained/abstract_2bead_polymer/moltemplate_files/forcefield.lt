
# Define a "ForceField" object.
# A force field in moltemplate is any object containing mostly pair_coeff,
# bond_coeff, angle_coeff, dihedral_coeff, "Bonds By Type", "Angles By Type",
# "Dihedrals By Type", "Impropers By Type", "Data Masses" (and "In Charges")
# information.  Later on when we define molecule objects, we can access all
# of the atom types and force field parameters here using "inherits ForceField".
# (See "monomer.lt" for example.)


ForceField {


  # LAMMPS supports a large number of "styles" (ie. equations for calculating 
  # forces between particles).  At some point, we must eventually select the
  # formulas we want to use.  This can be done anywhere, but we might as
  # well specify that now.  Later on we will specify the parameters
  # which go into these equations.

  write_once("In Init") {
    # -- Styles used in "ForceField" --
    # -- (Changing these styles will change the formulas above) --
    units           real
    atom_style      full
    bond_style      harmonic
    angle_style     harmonic
    dihedral_style  charmm
    pair_style      lj/cut 11.0
  }


  # There are 2 atom types: "CA" and "R"
  write_once("Data Masses") {
    @atom:CA    13.0
    @atom:R     50.0
  }

  # ---- 2-body (non-bonded) interactions: ----
  #   U(r) = 4*epsilon((sigma/r)^12 - (sigma/r)^6)
  #   (for details see http://lammps.sandia.gov/doc/pair_lj.html)
  #        atom-type   atom-type   epsilon sigma

  write_once("In Settings") {
    # Pairwise (non-bonded) interactions:
    #           atomType1 atomType2   epsilon sigma
    pair_coeff   @atom:CA @atom:CA       0.10 2.0
    pair_coeff   @atom:R  @atom:R        0.50 3.6
    # (Interactions between different atoms are determined by mixing rules.)
  }

  # ---- 2-body (bonded) interactions: ----
  #
  #   Ubond(r) = k*(r-r0)^2
  #   (for details see http://lammps.sandia.gov/doc/bond_harmonic.html)
  #
  write_once("In Settings") {
    #             bond-type        k     r0
    bond_coeff  @bond:Sidechain   15.0   3.4
    bond_coeff  @bond:Backbone    15.0   3.7
  }

  # ---- 3-body angle (hinge) interactions: ----

  # Rules for determining 3-body (angle) interactions by atom & bond type:
  # angle-type     atomType1 atomType2 atomType3  bondType1 bondType2

  write_once("Data Angles By Type") {
    @angle:Backbone  @atom:CA  @atom:CA  @atom:CA   @bond:*   @bond:*
    @angle:Sidechain @atom:CA  @atom:CA  @atom:R    @bond:*   @bond:*
  }

  # Force-field parameters for 3-body (angle) interactions:
  #
  #   Uangle(theta) = k*(theta-theta0)^2
  #   (for details see http://lammps.sandia.gov/doc/angle_harmonic.html)
  #
  write_once("In Settings") {
    #             angle-type       k    theta0
    angle_coeff @angle:Backbone   30.00  114
    angle_coeff @angle:Sidechain  30.00  132
  }

  # ---- 4-body dihedral interactions ----

  # 4-body interactions in this example are listed by atomType
  # Rules for determining 4-body (dihedral) interactions by atom & bond type:
  write_once("Data Dihedrals By Type") {
    # dihedralType atmType1 atmType2 atmType3 atmType4 bondType1 bType2 bType3
    @dihedral:CCCC @atom:CA @atom:CA @atom:CA @atom:CA  @bond:* @bond:* @bond:*
    @dihedral:RCCR @atom:R  @atom:CA @atom:CA @atom:R   @bond:* @bond:* @bond:*
  }

  # The forumula used is:
  #
  # Udihedral(phi) = K * (1 + cos(n*phi - d))
  #
  #     The d parameter is in degrees, K is in kcal/mol/rad^2.
  #     (for details, see http://lammps.sandia.gov/doc/dihedral_charmm.html)
  #
  # The corresponding command is 
  # dihedral_coeff dihedralType       K  n   d  w(ignored)

  write_once("In Settings") {
    dihedral_coeff @dihedral:CCCC   -0.5 1 -180 0.0
    dihedral_coeff @dihedral:RCCR   -1.5 1 -180 0.0
  }

} # "ForceField"


