# Description:

# This constructs a bilayer constructed from coarse-grained lipids
# (implicit solvent).  "Tunable generic model for fluid bilayer membranes"
# Cooke IR, Kremer K, Deserno M, Physical Review E, 2005



import "cooke_deserno_lipids.lt"


# Create a random mixture of lipids of type "CDlipids/A" and "CDlipids/B"

lipids = new random([CDlipids/A, CDlipids/B], [710,1658], 12345)
                    [32].move(1.178585,   0,     0)
                    [37].move(0.589293, 1.02068, 0)
                     [2].rot(180, 1, 0, 0)

#   Here "710,1658" are the number of each molecule type (must sum to 32*37*2),
#   and "12345" is an optional random seed:



# Move the lipds up to the center of the box
lipids[*][*][*].move(0,0,10.0)


# Although this patch of lipids is not square or rectangular, (it looks 
# like a parallelogram), this is no longer the case after rectangular
# periodic boundary conditions are applied.  We apply them below:
#   width:      37.71472 = 32 * 1.05 * 2^(1/6)
#   height:     37.76516 = 37 * 1.05 * 2^(1/6) * sqrt(3)/2

write_once("Data Boundary") {                                        
  0        37.71472     xlo xhi
  0        37.76516     ylo yhi
  0        20.0         zlo zhi                                     
}








# -------------- File ends here. Only comments below.-------------------

# ------------------------------------
# ------------- COMMENTS: ------------
# ------------------------------------
#
# A note on geometry:
# We want to create a bilayer arranged in a hexagonal lattice consisting of
#    32 rows     (each row is aligned with the x-axis)
#    37 columns  (aligned at a 60 degree angle from the x axis)
# When wrapped onto a rectangular box, the dimensions of the system are:
#    32 * 2^(1/6)              σ  units in the X direction
#    37 * 2^(1/6) * sqrt(3)/2  σ  units in the Y direction
# ------------------------------------
#
# Below I show simple ways to create a lipid bilayer:
#
# 1) If you just want to make lipid bilayer out of lipids,
#    without specifying the location of each lipid, you could use this syntax:
#        lipids = new CDlipid/A [32][37][2]   # 3-D array
#    Later you can load in the coordinates of the lipds from a PDB file.
#    Alternately you could also use a 1-dimensional array:
#        lipids = new CDlipid/A [2368]        # 1-D array.  Note: 2368 = 32x37x2
#    It does not matter as long as the number of lipids is correct.
#    Multidimensional arrays are only useful if you plan to apply independent
#    coordinate transformations to each row and column and monolayer as above.
#
