# PREREQUISITES:  You must run LAMMPS using "run.in.min" beforehand.
#             (This will create the "system_after_min0.data" file needed below.)
#########################################################
# Run using:
#
#   lmp_ubuntu_parallel -i run.in.stage1
#
#########################################################
#  GPUs:
#  To enable gpu acceleration, make sure settings.in.init includes this line:
#     package gpu force/neigh 0 0 1.0     (make sure it is not commented out.)
#  ...and replace "lj/cut" in the "settings.in.init" and "settings.in.settings"
#     files with "lj/cut/gpu"


# -- Init Section --

include system.in.init

# -- Atom Definition Section --

#read_data system.data
read_data system_after_min.data

# -- Settings Section --

include system.in.settings

# -- Run Section --

# DON'T MINIMIZE FIRST UNLESS YOU CHOOSE THE CORRECT INITIAL KbondC FORMULA
#thermo_style    custom step pe etotal vol epair ebond eangle edihed
#thermo_modify   norm no  #(report total energy not energy / num_atoms)
#thermo          20    #(time interval for printing out "thermo" data)
#min_style sd
#min_modify dmax 0.05
#minimize 1.0e-7 1.0e-8 20000 1000000
#write_data system_after_min_t=0.data


mass      *  1.0
timestep     0.005     #  "dt"
dump         1 all custom 25000 traj_stage1.lammpstrj id mol type x y z ix iy iz
reset_timestep  0


#     --- run the simulation ---


# set the velocity to zero
velocity all create 0.0  123456

# To use Langevin dynamics in LAMMPS you need both "fix langevin" and "fix nve"
# (See http://lammps.sandia.gov/doc/fix_langevin.html for details.)

#                           Tstart     Tstop    tdamp      randomseed

fix fxlan all langevin       1.0        1.0     10.0         123456

#                     pstart   pstop  pdamp(time-units, 2000 iters usually)
#fix fxnph all nph x  -0.000   -0.000   1.0
fix fxnve all nve 
# (See http://lammps.sandia.gov/doc/fix_langevin.html)

fix fxcenter all recenter 0.0 0.0 0.0

thermo_style    custom step temp pe etotal press vol epair ebond eangle edihed
thermo_modify   norm no  #(report total energy not energy / num_atoms)
thermo          1000    #(time interval for printing out "thermo" data)

#balance dynamic x 20 1.0 -out tmp.balance
#balance x uniform


variable nloop1 loop 300

    label loop1

    print "############### LOOP ${nloop1} ###############"

    # Now, change the bond-strength between condensin monomers.
    # From the Naumova et al Science 2013 paper (supp materials)
    # "Two-stage model: linear compaction + axial compression"
    # "First, random consecutive loops with L=100 monomers (see above) were 
    #  introduced, and anchors of neighboring loops were brought together 
    #  using harmonic springs with a potential U = k * (r â€“ r0)2; r0=0.5.
    #  To avoid abrupt motion of the loop anchors, the force was gradually 
    #  turned on over the first 300000 timesteps, with k linearly increasing 
    #  in time from 0 to 10 kT."
    # Do this by changing the parameters in the force-field for these
    # bonds.
    #
    #    Formula used for "bond_style harmonic":
    # Ubond(r) = k*(r-r0)^2
    #           bondType    style
    #bond_coeff    1       harmonic    0.1  0.5
  
    variable time equal step
    variable KbondC equal $((v_time+1)*(10.0/300000.0))
    print "timestep = ${time}, KbondC = ${KbondC}" file KbondC_vs_time.dat

    #bond_coeff    1       harmonic    ${KbondC}  0.5
    bond_coeff    1       harmonic    ${KbondC}  0.5
    run   1000
  
    next nloop1
    jump SELF loop1

write_data system_after_stage1.data

