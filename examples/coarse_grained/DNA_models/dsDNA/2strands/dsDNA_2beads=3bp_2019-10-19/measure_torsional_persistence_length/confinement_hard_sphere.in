##########################################################
# Now define "rSphere", a spherical region (used by LAMMPS fix wall/region)
#
#                     sphere_center radius
#                      x0  y0   z0   rc0
#                      |    |    |    |
#                     \|/  \|/  \|/  \|/
#                      V    V    V    V

region rSphere sphere  0    0    0  200.0   side in

# This sets the parameter "rc0" equal to 200.0.
# The "200.0" means we assume no particle will ever be further than 200.0
# from the center of the sphere.



# Now apply an inward force applied to every particle which lies outside
# a spherical region (of radius rc0-rc)
# The energy of each particle (due to that force) is:
#
# Uexternal(r) = k*(rsurf-rc)^2 
#       where "rsurf" = the distance from the particle to the surface = rc0 - r
#              = k*((rc0-rc) - r)^2
#                 
#                                             k  ignore rc
#                                             |    |    |
#                                            \|/  \|/  \|/
#                                             V    V    V

fix fxWall all wall/region rSphere harmonic  10.0 0.0  166.57664563113605

# Uexternal(r) = k*((rc0-rc) - r)^2    (if (rc0-rc) < r < rc0,  0 otherwise)
# 
#     Note that rc0-rc = 33.42335436886394
#               rc0-rc = the "inner" sphere radius
#                        Choose it to give the desired particle density.
#                        I chose it to emulate the packing density of
#                        chromatin in an interphase nucleus


# For (a very confusing) explanation of these commands go here:
# http://lammps.sandia.gov/doc/fix_wall_region.html
# http://lammps.sandia.gov/doc/region.html
# (I had to figure things out by reading the source code, fix_wall_region.cpp)


# NOTES:


##########################################################
########  How big should the (inner) sphere be ? #########
##########################################################
# Choose the inner-sphere size
# N = 32768.0
# Make a sphere 9 times bigger than necessary to hold this polymer (11.11% occ)
# (This mimics the interphase nucleus which is filled by chromatin 5%-25%)
# R = pow(8*N / (4.0*pi/3.0), (1.0/3.0))
#   = 41.29219266374878
# This assumes the volume of each monomer is 1.0 (1x1x1).
# This is not quite right.
# If you want to get really, fancy, then try to estimate the average volume
# per monomer.  Take into account their spherical shape and packing density.
# Assume the monomers arrange themselves in a way which optimizes the packing
# density ("fcc" packing).  This is not quite true, but it's more accurate
# than assuming each particle occupies a cubic volume of 1*1*1.
#
# monomer_volume=(pi/8.0)  #=vol of sphere of diameter 1 (same size as monomer)
# fcc_density=pi/sqrt(18)  #=occupied volume fraction in hard sphere fcc packing
#
# R = pow((monomer_volume/fcc_density)*9*N / (4.0*pi/3.0), (1.0/3.0))
#   = 33.42335436886394
#
##########################################################
######## Note: "R" is the same thing as "rc0-rc" #########
##########################################################
